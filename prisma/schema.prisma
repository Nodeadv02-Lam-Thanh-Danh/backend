generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int       @id @default(autoincrement())
  first_name String    @db.VarChar(100)
  email      String    @unique(map: "email_unique") @db.VarChar(255)
  password   String?   @db.VarChar(1024)
  phone      String?   @unique(map: "phone_unique") @db.VarChar(20)
  address    String?   @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  last_name  String    @db.VarChar(100)
  username   String    @unique(map: "username_unique") @db.VarChar(100)
}

model food {
  id                Int        @id @default(autoincrement())
  name              String     @db.VarChar(255)
  categoryId        Int
  restaurantId      Int
  sale_daily        Boolean
  sale_date         DateTime?  @db.Date
  quantity          Int
  quantity_remained Int
  price             Int?
  restaurant        restaurant @relation(fields: [restaurantId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  image             image[]
}

model food_category {
  id   Int    @id(map: "FoodCategory_pkey") @default(autoincrement())
  name String @db.VarChar(255)
  icon String @db.VarChar(255)
}

model order {
  id       Int        @id @default(autoincrement())
  userId   Int
  time     DateTime   @default(now()) @db.Timestamp(6)
  details  Json       @db.Json
  status   String     @default("new") @db.VarChar(30)
  checkout checkout[]
}

model restaurant {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(255)
  address        String @db.VarChar(255)
  business_hours Json   @db.Json
  food           food[]
}

model image {
  id     Int    @id @default(autoincrement())
  url    String @db.VarChar(500)
  foodId Int
  food   food   @relation(fields: [foodId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([foodId], map: "idx_food_images_food_id")
}

model checkout {
  id               Int       @id @default(autoincrement())
  order_id         Int
  shipping_method  Int       @default(1)
  payment_method   Int       @default(1)
  shipping_address Int?      @default(1)
  total_price      Int
  status           String    @default("new") @db.VarChar
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)
  order            order     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
